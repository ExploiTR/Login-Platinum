package app.exploitr.login.platinum.models;

import io.realm.Realm;
import io.realm.RealmAny;
import io.realm.RealmConfiguration;
import io.realm.RealmResults;

public class RealmController {

    private static Realm instance;
    private static RealmController classInstance;

    public static RealmController getInstance() {
        if (instance == null || classInstance == null) {
            instance = Realm.getInstance(
                    new RealmConfiguration
                            .Builder()
                            .schemaVersion(1)
                            .allowQueriesOnUiThread(true)
                            .allowWritesOnUiThread(true)
                            .deleteRealmIfMigrationNeeded()
                            .build());
            return (classInstance = new RealmController());
        }
        return classInstance;
    }

    public RealmResults<ISPDataModel> getIspProfileList() {
        return instance.where(ISPDataModel.class).findAll();
    }

    public RealmResults<UserDataModel> getUserProfileList() {
        return instance.where(UserDataModel.class).findAll();
    }

    public boolean ifIspProfileExist(RealmAny id) {
        return instance.where(ISPDataModel.class).containsValue("isp_profile_id", id).findAll().size() > 0;
    }

    public ISPDataModel getIspProfileByID(RealmAny value) {
        return instance.where(ISPDataModel.class).containsValue("isp_profile_id", value).findFirst();
    }

    public UserDataModel getUserProfileByID(RealmAny value) {
        return instance.where(UserDataModel.class).containsValue("user_profile_id", value).findFirst();
    }

    public void updateIspProfile(ISPDataModel model) {
        instance.executeTransaction(realm -> realm.insertOrUpdate(model));
    }

    public void updateUserProfile(UserDataModel model) {
        instance.executeTransaction(realm -> realm.insertOrUpdate(model));
    }

    public boolean deleteIspProfileByID(RealmAny value) {
        if (!getIspProfileByID(value).isImmutable())
            return false;
        instance.executeTransaction(realm -> getIspProfileByID(value).deleteFromRealm());
        return true;
    }

    public void deleteUserProfileByID(RealmAny value) {
        instance.executeTransaction(realm -> getUserProfileByID(value).deleteFromRealm());
    }

    public void clear() {
        instance.executeTransaction(realm -> realm.deleteAll());
    }
}
