package app.exploitr.fast.login.connectors;

import android.content.Context;
import android.os.AsyncTask;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import app.exploitr.fast.login.background_workers.AutoJob;
import app.exploitr.login.platinum.helpers.Constants;
import app.exploitr.fast.login.utils.DataMan;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class NonAwareLogin {
    public static void connect(final Context context) {
        AsyncTask.execute(() -> {
            if (DataMan.getInstance(context).getUser() != null) {
                OkHttpClient client = new OkHttpClient.Builder().build();
                RequestBody formBody = new FormBody.Builder()
                        .add(Constants.POST_USERNAME_FIELD, DataMan.getInstance(context).getUser())
                        .add(Constants.POST_PASSWORD_FIELD, DataMan.getInstance(context).getPassword())
                        .build();

                Request.Builder builder = new Request.Builder()
                        .url(Constants.URL_TO_LOGIN)
                        .post(formBody);
                Request request = builder.build();

                try {
                    Response response = client.newCall(request).execute();
                    if (response.code() == 200) {
                        /*DataMan#getNotificationsEnabled() is handled outta there*/
                        AutoJob.showNotification(Constants.LOGIN_OK, Constants.NEXT_SCHEDULE_INF, context,
                                TimeUnit.SECONDS.toMillis(15));
                    } else {
                        AutoJob.showNotification(Constants.CONNECTION_ERR, Constants.NEXT_SCHEDULE_ERR, context,
                                TimeUnit.SECONDS.toMillis(60));
                    }
                    if(response.body() != null){
                        response.body().close();
                    }
                } catch (IOException e) {
                    e.getSuppressed();
                    e.printStackTrace();
                    AutoJob.showNotification(Constants.LOGIN_ERR, Constants.NEXT_SCHEDULE_ERR, context,
                            TimeUnit.SECONDS.toMillis(15));
                }
            }
        });

    }
}
