package app.exploitr.fast.login.ui_access;

import android.os.AsyncTask;
import android.view.View;
import android.widget.TextView;

import com.txusballesteros.SnakeView;

import java.lang.ref.WeakReference;

import app.exploitr.fast.login.connectors.UpdatedStatus;
import app.exploitr.login.platinum.helpers.Constants;

public class Grapher extends AsyncTask<Void, Void, Float> implements Constants {

    private WeakReference<SnakeView> snakeView;
    private WeakReference<TextView> pingVal;

    Grapher(TextView pingText, SnakeView snakeViewInput) {
        snakeView = new WeakReference<>(snakeViewInput);
        pingVal = new WeakReference<>(pingText);
    }


    @Override
    protected Float doInBackground(Void... voids) {
        try {
            String phi = UpdatedStatus.returnPingMsOut();
            return Float.parseFloat(phi);
        } catch (Exception e) {
            e.printStackTrace();
            return 0f;
        }
    }

    @Override
    protected void onPostExecute(Float cow) {
        if (!(snakeView == null || snakeView.get() == null)) {
            snakeView.get().setVisibility(View.VISIBLE);
            if (cow >= 125f | cow <= 0f) {
                String avoidConcatenate = "Ping > " + 125 + " ms";
                pingVal.get().setText(avoidConcatenate);
                snakeView.get().addValue(0);
                AverageGrapher.inited_Already().putValue(125);
            } else {
                if (AverageGrapher.inited_Already() != null) {
                    AverageGrapher.inited_Already().putValue(Math.round(cow));
                }
                String avoidConcatenate = "Ping = " + cow + " ms";
                pingVal.get().setText(avoidConcatenate);
                snakeView.get().addValue(125 - cow); // reversing
            }

        }
        super.onPostExecute(cow);
    }

}
