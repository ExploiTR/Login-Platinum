package app.exploitr.fast.login.ui_access;


import android.app.DialogFragment;
import android.os.Bundle;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.style.ForegroundColorSpan;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.SwitchCompat;

import com.google.android.material.snackbar.Snackbar;

import java.io.IOException;
import java.util.Objects;

import app.exploitr.fast.login.R;
import app.exploitr.fast.login.dialogs.AdvancedDialog;
import app.exploitr.login.platinum.helpers.Constants;
import app.exploitr.fast.login.utils.DataMan;
import app.exploitr.fast.login.utils.Utils;

public class SettingsActivity extends AppCompatActivity implements Constants {

    EditText userText, passText, ipAddr, ipAddrCount;
    SwitchCompat autoCompat, graphCompat;
    Button save, reset, advanced;

    /*Todo add toolbar menu upload/download button to instant credential restore & upload*/

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);

        if (getSupportActionBar() != null) {
            Spannable text = new SpannableString("Configurations");
            text.setSpan(new ForegroundColorSpan(DataMan.getInstance(getBaseContext()).getTitleThemeColor()),
                    0, text.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
            getSupportActionBar().setTitle(text);
        }

        autoCompat = findViewById(R.id.autoLogin);
        graphCompat = findViewById(R.id.graph_settings);

        autoCompat.setChecked(DataMan.getInstance(getBaseContext()).isAutoL());
        autoCompat.setOnCheckedChangeListener((buttonView, isChecked) -> DataMan.getInstance(getBaseContext()).setAutoL(isChecked));

        graphCompat.setChecked(DataMan.getInstance(getBaseContext()).isGraphEnabled());
        graphCompat.setOnCheckedChangeListener((buttonView, isChecked) -> DataMan.getInstance(getBaseContext()).setGraphEnabled(isChecked));

        userText = findViewById(R.id.usernameput);
        passText = findViewById(R.id.passwordput);
        ipAddr = findViewById(R.id.ipAddrput);
        ipAddrCount = findViewById(R.id.ipCountput);

        save = findViewById(R.id.save);
        reset = findViewById(R.id.reset);
        advanced = findViewById(R.id.advanced);

        save.post(() -> {
            if (getIntent() != null && getIntent().getStringExtra(REQUEST_U_P) != null)
                if (getIntent().getStringExtra(REQUEST_U_P).equals(REQUEST_U_P)) {
                    Snackbar.make(save, "Please Save Username/Password", Snackbar.LENGTH_INDEFINITE)
                            .setAction("Ok", null).show();
                }
        });

        save.setOnClickListener(v -> {
            String USERNAME = userText.getText().toString().replaceAll("\\s+", "");
            String PASSWORD = passText.getText().toString().replaceAll("\\s+", "");

            String ipAddressT = ipAddr.getText().toString().replaceAll("\\s+", "");
            String ipCountT = ipAddrCount.getText().toString().replaceAll("\\s+", "");

            if (!Objects.equals(USERNAME, "")) {
                DataMan.getInstance(getBaseContext()).setUser(USERNAME);
                DataMan.getInstance(getBaseContext()).setPassword(PASSWORD);
                CharSequence text = getString(R.string.set_user_show) + USERNAME + "\n" + getString(R.string.set_pwd_show) + PASSWORD;
                Toast.makeText(getBaseContext(), text, Toast.LENGTH_SHORT).show();
                MainActivity.tryLogin = true;
                changeToWriteMode();
            } else {
                Toast.makeText(getBaseContext(), R.string.cred_let_def, Toast.LENGTH_SHORT).show();
            }

            if (!Objects.equals(ipAddressT, "") && !Objects.equals(ipCountT, "")) {
                if (Utils.validIP(ipAddressT) && Utils.validNumber(ipCountT)) {
                    DataMan.getInstance(getBaseContext()).setPingAddress(ipAddressT);
                    DataMan.getInstance(getBaseContext()).setPingAttempts(ipCountT);
                    Toast.makeText(getBaseContext(), R.string.ping_inf_updated, Toast.LENGTH_SHORT).show();
                } else {
                    Toast.makeText(getBaseContext(), R.string.ping_inf_wrng_go_def, Toast.LENGTH_SHORT).show();
                }
            }

            finish();
        });
        reset.setOnClickListener(v -> new AlertDialog.Builder(SettingsActivity.this)
                .setTitle("Are You SURE?")
                .setPositiveButton("Ya", (dialog, which) -> {
                    try {
                        Runtime.getRuntime().exec("pm clear app.exploitr.fast.login");
                    } catch (IOException e) {
                        e.getSuppressed();
                        e.printStackTrace();
                        Toast.makeText(getBaseContext(), "Failed", Toast.LENGTH_SHORT).show();
                    }
                }).show());
        advanced.setOnClickListener(v -> {
            DialogFragment dialogFragment = new AdvancedDialog();
            dialogFragment.setCancelable(false);
            dialogFragment.show(getFragmentManager(), "what?");
        });

    }

    @Override
    protected void onResume() {
        MainActivity.tryLogin = false;
        super.onResume();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.settings_menu, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        //TODO check id's working
        if (item.getItemId() == R.id.c_u) {
            if (Utils.userName(getBaseContext()) != null && !Utils.userName(getBaseContext()).equals("")) {
                MainActivity.tryLogin = true;
                changeToWriteMode();
                finish();
                Toast.makeText(getApplicationContext(), "Connecting to Drive", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Please save credentials first before uploading.", Toast.LENGTH_SHORT).show();
            }
            return true;
        } else if (item.getItemId() == R.id.c_d) {
            MainActivity.tryLogin = true;
            changeToReadMode();
            finish();
            Toast.makeText(getApplicationContext(), "Connecting to Drive", Toast.LENGTH_SHORT).show();
            return true;
        }
        return false;
    }

    private void changeToWriteMode() {
        MainActivity.specialRequestCode = writeSpecialRequestCode;
    }

    private void changeToReadMode() {
        MainActivity.specialRequestCode = readSpecialRequestCode;
    }

}
